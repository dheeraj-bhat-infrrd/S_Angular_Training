<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  xmlns:task="http://www.springframework.org/schema/task" xmlns:mongo="http://www.springframework.org/schema/data/mongo" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/data/mongo
                    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd" default-lazy-init="true">

	<context:property-placeholder location="classpath*:config.properties" />
	
	<context:component-scan base-package="com.realtech.socialsurvey.*" />
	<context:annotation-config />
	<task:annotation-driven />

	<bean id="reCaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl">
		<property name="privateKey">
			<value>6LdlHOsSAAAAACe2WYaGCjU2sc95EZqCI9wLcLXY</value>
		</property>
	</bean>
	<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	
	<!-- <bean id="linkedInApiClientFactory" class="com.google.code.linkedinapi.client.LinkedInApiClientFactory" factory-method="newInstance">
         <constructor-arg value="api-key"/> 
         <constructor-arg value="api-secret"/> 
	</bean> -->

	<!-- Define the MongoTemplate which handles connectivity with MongoDB -->

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	     <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
		<!-- <constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="ss_db" />  -->
		<property name="writeResultChecking" value="LOG"/>
	</bean> <!-- Factory bean that creates the Mongo instance -->

	<bean id="mongoClient" class="com.mongodb.MongoClient">
	    <constructor-arg ref="mongoClientURI"/>
	</bean>
	
	<bean id="mongoClientURI" class="com.mongodb.MongoClientURI">
	    <constructor-arg name="uri" value="${MONGO_CLIENT_URI}"/>
	</bean>

	<mongo:db-factory id="mongoDbFactory" dbname="ss_db" mongo-ref="mongoClient"/>
	<!-- <bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
		<property name="host" value="${MONGO_HOST}" />
		<property name="port" value="${MONGO_PORT}" />
	</bean>  -->

	<!-- Use this post processor to translate any MongoExceptions thrown in 
		@Repository annotated classes -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!--Define RedisTemplate which handles connectivity for Redis-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
		  p:max-total="200"/>

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:use-pool="true"
		  p:host-name="${redis.host}" p:port="${redis.port}">
		<constructor-arg ref="jedisPoolConfig"/>
	</bean>

	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
		  p:connection-factory-ref="jedisConnectionFactory" p:enable-transaction-support="true"/>

	<import resource="hibernate-config.xml" />

</beans>
